AWSTemplateFormatVersion: '2010-09-09'
Resources:
  WebServerAsg:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      VPCZoneIdentifier:
        - subnet-02ca7cb231c76c554 # Find public subnets within the default VPC or 
        - subnet-0b94bee36b9a5fb63
      DesiredCapacity: '3'
      HealthCheckType: 'ELB'
      HealthCheckGracePeriod: 30 
      LaunchConfigurationName: !Ref WebServersLC
      MaxSize: '3'
      MinSize: '3'
      TargetGroupARNs: [!Ref ApplicationTargetGroup, !Ref ApplicationTargetGroup2]
      Tags: 
        - Key: Name
          PropagateAtLaunch: True
          Value: IreneTestInstances
   
  WebServersLC:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: ami-0256a65b441b3a099
      InstanceType: 't2.micro'
      SecurityGroups:
        - sg-0bd4c92c9a715aa88
      UserData: 
        Fn::Base64:
          Fn::Sub: |
            #!/bin/bash -xe

            yum install -y aws-cfn-bootstrap

            # Install the files and packages from the metadata
            /opt/aws/bin/cfn-init -v \
              --stack ${AWS::StackName} \
              --resource WebServersLC \
              --configsets All \
              --region ${AWS::Region}

            # Signal the status from cfn-init
            /opt/aws/bin/cfn-signal -e $? \
              --stack ${AWS::StackName} \
              --resource WebServersLC \
              --region ${AWS::Region}

    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          All:
            - ConfigureStelligentProject
        ConfigureStelligentProject:
          packages:
            yum:
              nginx: []
          files:
            /usr/share/nginx/html/index.html:
              content: '<p>Automation for the People</p>'
              mode: '000644'
              owner: root
              group: root
          services:
            sysvinit:
              nginx:
                enabled: 'true'
                ensureRunning: 'true'

  MyLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: IreneALB
      Subnets:
        - subnet-02ca7cb231c76c554 # Find public subnets within the default VPC or 
        - subnet-0b94bee36b9a5fb63
      SecurityGroups:
        - sg-0bd4c92c9a715aa88
      Tags:
        - Key: Name
          Value: IreneTestInstances

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref MyLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ApplicationTargetGroup

  ApplicationTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 15
      HealthyThresholdCount: 5
      HealthCheckPath: /index.html
      UnhealthyThresholdCount: 3
      Matcher:
        HttpCode: '200'
      VpcId: vpc-0eda4c5321822a055
      Name: ApplicationTargetGroup
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '20'

  LoadBalancerListener2:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref MyLoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: arn:aws:acm:us-east-1:324320755747:certificate/4aba339c-b89f-4344-bd68-c2dbf95f1c8d
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ApplicationTargetGroup2

  ApplicationTargetGroup2:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: HTTPS
      HealthCheckTimeoutSeconds: 15
      HealthyThresholdCount: 5
      HealthCheckPath: /index.html
      UnhealthyThresholdCount: 3
      Matcher:
        HttpCode: '200'
      VpcId: vpc-0eda4c5321822a055
      Name: ApplicationTargetGroup2
      Port: 443
      Protocol: HTTPS
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '20'
