AWSTemplateFormatVersion: "2010-09-09"
Mappings:
  RegionMap:
    us-east-1:
      vpcId: vpc-0eda4c5321822a055
      subnetId: subnet-02ca7cb231c76c554
      imageId: ami-02e136e904f3da870
Resources:
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: EC2LaunchTemplate
      LaunchTemplateData:
        InstanceType: t2.small
        IamInstanceProfile: 
          Name: !Ref InstanceProfile
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: IreneTestInstances
        NetworkInterfaces:
          -
            DeviceIndex: 0
            AssociatePublicIpAddress: True
            SubnetId: !FindInMap [ RegionMap, !Ref "AWS::Region", subnetId ]
        UserData: 
          Fn::Base64: !Sub | 
            #!/bin/bash -xe
            # Install the files and packages from the metadata
            yum update -y
            yum install -y aws-cfn-bootstrap

            /opt/aws/bin/cfn-init -v \
              --stack ${AWS::StackName} \
              --configsets default \
              --resource EC2 \
              --region ${AWS::Region}

            /opt/aws/bin/cfn-signal -e $? \
              --stack ${AWS::StackName} \
              --resource EC2 \
              --region ${AWS::Region}
  EC2:
    Type: AWS::EC2::Instance
    Properties: 
      LaunchTemplate: 
        LaunchTemplateId: !Ref LaunchTemplate
        Version: "1"
      ImageId: !FindInMap [ RegionMap, !Ref "AWS::Region", imageId ]
    CreationPolicy:
      ResourceSignal:    
        Count: 1
        Timeout: PT5M
    Metadata: 
      AWS::CloudFormation::Init: 
        configSets:
          default:
            - install
            - configfile
            - launch
        install: 
          sources: 
            /etc/cloudwatchagent: https://s3.amazonaws.com/amazoncloudwatch-agent/linux/amd64/latest/AmazonCloudWatchAgent.zip
          commands:
            installCloudwatch: 
              command: ./install.sh
              cwd: /etc/cloudwatchagent
        configfile:
          files: 
            /opt/aws/amazon-cloudwatch-agent/amazon-cloudwatch-agent.json:
              content: !Sub |
                {
                  "agent": {
                    "metrics_collection_interval": 60,
                    "run_as_user": "root",
                    "logfile": "/opt/aws/amazon-cloudwatch-agent/logs/amazon-cloudwatch-agent.log"
                  },
                  "logs": {
                    "logs_collected": {
                      "files": {
                        "collect_list": [
                          {
                            "file_path": "/var/log/cloud-init.log",
                            "log_group_name": "irene-test-log-group",
                            "timezone": "Local",
                            "log_stream_name": "c9.training"
                          },
                          {
                            "file_path": "/var/log/cloud-init-output.log",
                            "log_group_name": "irene-test-log-group",
                            "timezone": "Local",
                            "log_stream_name": "c9.training"
                          }
                        ]
                      }
                    }
                  }
                }
        launch:
          commands:
            launchCloudwatch: 
              command: /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/amazon-cloudwatch-agent.json -s
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles:
        - !Ref RoleCloudWatch
  RoleCloudWatch:
    Type: AWS::IAM::Role
    Properties: 
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Topic 5 - EC2 Lab
      VpcId: !FindInMap [ RegionMap, !Ref "AWS::Region", vpcId ]
